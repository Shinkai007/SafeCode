/**
 * Tries to detect calls to fs functions that take a non Literal value as the filename parameter
 * @author Adam Baldwin
 */'use strict';function cov_23rmp0sryo(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-fs-filename.js";var hash="a0d38862224a59517352c5f76175d0e3ca355a23";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-fs-filename.js",statementMap:{"0":{start:{line:8,column:19},end:{line:8,column:63}},"1":{start:{line:9,column:18},end:{line:9,column:41}},"2":{start:{line:10,column:23},end:{line:10,column:87}},"3":{start:{line:12,column:32},end:{line:12,column:64}},"4":{start:{line:13,column:31},end:{line:13,column:71}},"5":{start:{line:19,column:0},end:{line:96,column:2}},"6":{start:{line:30,column:4},end:{line:94,column:6}},"7":{start:{line:33,column:8},end:{line:35,column:9}},"8":{start:{line:33,column:120},end:{line:33,column:147}},"9":{start:{line:34,column:10},end:{line:34,column:17}},"10":{start:{line:37,column:25},end:{line:41,column:10}},"11":{start:{line:42,column:8},end:{line:44,column:9}},"12":{start:{line:43,column:10},end:{line:43,column:17}},"13":{start:{line:46,column:8},end:{line:70,column:9}},"14":{start:{line:62,column:10},end:{line:62,column:36}},"15":{start:{line:63,column:15},end:{line:70,column:9}},"16":{start:{line:67,column:10},end:{line:67,column:36}},"17":{start:{line:69,column:10},end:{line:69,column:17}},"18":{start:{line:71,column:8},end:{line:73,column:9}},"19":{start:{line:72,column:10},end:{line:72,column:23}},"20":{start:{line:74,column:28},end:{line:74,column:48}},"21":{start:{line:76,column:24},end:{line:76,column:26}},"22":{start:{line:77,column:8},end:{line:86,column:9}},"23":{start:{line:78,column:10},end:{line:80,column:11}},"24":{start:{line:79,column:12},end:{line:79,column:21}},"25":{start:{line:81,column:27},end:{line:81,column:48}},"26":{start:{line:82,column:10},end:{line:84,column:11}},"27":{start:{line:83,column:12},end:{line:83,column:21}},"28":{start:{line:85,column:10},end:{line:85,column:30}},"29":{start:{line:87,column:8},end:{line:92,column:9}},"30":{start:{line:88,column:10},end:{line:91,column:13}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:29,column:10},end:{line:29,column:11}},loc:{start:{line:29,column:29},end:{line:95,column:3}},line:29},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:22},end:{line:31,column:23}},loc:{start:{line:31,column:38},end:{line:93,column:7}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:106},end:{line:33,column:107}},loc:{start:{line:33,column:120},end:{line:33,column:147}},line:33}},branchMap:{"0":{loc:{start:{line:33,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:33,column:8},end:{line:35,column:9}},{start:{line:33,column:8},end:{line:35,column:9}}],line:33},"1":{loc:{start:{line:33,column:12},end:{line:33,column:148}},type:"binary-expr",locations:[{start:{line:33,column:13},end:{line:33,column:46}},{start:{line:33,column:50},end:{line:33,column:80}},{start:{line:33,column:85},end:{line:33,column:148}}],line:33},"2":{loc:{start:{line:42,column:8},end:{line:44,column:9}},type:"if",locations:[{start:{line:42,column:8},end:{line:44,column:9}},{start:{line:42,column:8},end:{line:44,column:9}}],line:42},"3":{loc:{start:{line:46,column:8},end:{line:70,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:70,column:9}},{start:{line:46,column:8},end:{line:70,column:9}}],line:46},"4":{loc:{start:{line:63,column:15},end:{line:70,column:9}},type:"if",locations:[{start:{line:63,column:15},end:{line:70,column:9}},{start:{line:63,column:15},end:{line:70,column:9}}],line:63},"5":{loc:{start:{line:71,column:8},end:{line:73,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:73,column:9}},{start:{line:71,column:8},end:{line:73,column:9}}],line:71},"6":{loc:{start:{line:77,column:28},end:{line:77,column:52}},type:"binary-expr",locations:[{start:{line:77,column:28},end:{line:77,column:46}},{start:{line:77,column:50},end:{line:77,column:52}}],line:77},"7":{loc:{start:{line:78,column:10},end:{line:80,column:11}},type:"if",locations:[{start:{line:78,column:10},end:{line:80,column:11}},{start:{line:78,column:10},end:{line:80,column:11}}],line:78},"8":{loc:{start:{line:82,column:10},end:{line:84,column:11}},type:"if",locations:[{start:{line:82,column:10},end:{line:84,column:11}},{start:{line:82,column:10},end:{line:84,column:11}}],line:82},"9":{loc:{start:{line:87,column:8},end:{line:92,column:9}},type:"if",locations:[{start:{line:87,column:8},end:{line:92,column:9}},{start:{line:87,column:8},end:{line:92,column:9}}],line:87}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a0d38862224a59517352c5f76175d0e3ca355a23"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_23rmp0sryo=function(){return actualCoverage;};}return actualCoverage;}cov_23rmp0sryo();const fsMetaData=(cov_23rmp0sryo().s[0]++,require('../utils/data/fsFunctionData.json'));const funcNames=(cov_23rmp0sryo().s[1]++,Object.keys(fsMetaData));const fsPackageNames=(cov_23rmp0sryo().s[2]++,['fs','node:fs','fs/promises','node:fs/promises','fs-extra']);const{getImportAccessPath}=(cov_23rmp0sryo().s[3]++,require('../utils/import-utils'));const{isStaticExpression}=(cov_23rmp0sryo().s[4]++,require('../utils/is-static-expression'));//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
cov_23rmp0sryo().s[5]++;module.exports={meta:{type:'error',docs:{description:'Detects variable in filename argument of "fs" calls, which might allow an attacker to access anything on your system.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-fs-filename.md'}},create:function(context){cov_23rmp0sryo().f[0]++;cov_23rmp0sryo().s[6]++;return{CallExpression:function(node){cov_23rmp0sryo().f[1]++;cov_23rmp0sryo().s[7]++;// don't check require. If all arguments are Literals, it's surely safe!
if((cov_23rmp0sryo().b[1][0]++,node.callee.type==='Identifier')&&(cov_23rmp0sryo().b[1][1]++,node.callee.name==='require')||(cov_23rmp0sryo().b[1][2]++,node.arguments.every(argument=>{cov_23rmp0sryo().f[2]++;cov_23rmp0sryo().s[8]++;return argument.type==='Literal';}))){cov_23rmp0sryo().b[0][0]++;cov_23rmp0sryo().s[9]++;return;}else{cov_23rmp0sryo().b[0][1]++;}const pathInfo=(cov_23rmp0sryo().s[10]++,getImportAccessPath({node:node.callee,scope:context.getScope(),packageNames:fsPackageNames}));cov_23rmp0sryo().s[11]++;if(!pathInfo){cov_23rmp0sryo().b[2][0]++;cov_23rmp0sryo().s[12]++;return;}else{cov_23rmp0sryo().b[2][1]++;}let fnName;cov_23rmp0sryo().s[13]++;if(pathInfo.path.length===1){cov_23rmp0sryo().b[3][0]++;cov_23rmp0sryo().s[14]++;// Check for:
// | var something = require('fs').readFile;
// | something(a);
// ,
// | var something = require('fs');
// | something.readFile(c);
// ,
// | var { readFile: something } = require('fs')
// | readFile(filename);
// ,
// | import { readFile as something } from 'fs';
// | something(filename);
// , or
// | import * as something from 'fs';
// | something.readFile(c);
fnName=pathInfo.path[0];}else{cov_23rmp0sryo().b[3][1]++;cov_23rmp0sryo().s[15]++;if(pathInfo.path.length===2){cov_23rmp0sryo().b[4][0]++;cov_23rmp0sryo().s[16]++;// Check for:
// | var something = require('fs').promises;
// | something.readFile(filename)
fnName=pathInfo.path[1];}else{cov_23rmp0sryo().b[4][1]++;cov_23rmp0sryo().s[17]++;return;}}cov_23rmp0sryo().s[18]++;if(!funcNames.includes(fnName)){cov_23rmp0sryo().b[5][0]++;cov_23rmp0sryo().s[19]++;return false;}else{cov_23rmp0sryo().b[5][1]++;}const packageName=(cov_23rmp0sryo().s[20]++,pathInfo.packageName);const indices=(cov_23rmp0sryo().s[21]++,[]);cov_23rmp0sryo().s[22]++;for(const index of(cov_23rmp0sryo().b[6][0]++,fsMetaData[fnName])||(cov_23rmp0sryo().b[6][1]++,[])){cov_23rmp0sryo().s[23]++;if(index>=node.arguments.length){cov_23rmp0sryo().b[7][0]++;cov_23rmp0sryo().s[24]++;continue;}else{cov_23rmp0sryo().b[7][1]++;}const argument=(cov_23rmp0sryo().s[25]++,node.arguments[index]);cov_23rmp0sryo().s[26]++;if(isStaticExpression({node:argument,scope:context.getScope()})){cov_23rmp0sryo().b[8][0]++;cov_23rmp0sryo().s[27]++;continue;}else{cov_23rmp0sryo().b[8][1]++;}cov_23rmp0sryo().s[28]++;indices.push(index);}cov_23rmp0sryo().s[29]++;if(indices.length){cov_23rmp0sryo().b[9][0]++;cov_23rmp0sryo().s[30]++;context.report({node,message:`Found ${fnName} from package "${packageName}" with non literal argument at index ${indices.join(',')}`});}else{cov_23rmp0sryo().b[9][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,