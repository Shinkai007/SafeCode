/**
 * Tries to detect buffer read / write calls that use noAssert set to true
 * @author Adam Baldwin
 */'use strict';//-----------------------------------------------------------------------------
// Helpers
//-----------------------------------------------------------------------------
function cov_1x2sbq673b(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-buffer-noassert.js";var hash="4750097efa052f871a618a60e0dd59040dc1c1db";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-buffer-noassert.js",statementMap:{"0":{start:{line:12,column:13},end:{line:27,column:1}},"1":{start:{line:29,column:14},end:{line:44,column:1}},"2":{start:{line:50,column:0},end:{line:80,column:2}},"3":{start:{line:65,column:4},end:{line:78,column:6}},"4":{start:{line:68,column:8},end:{line:72,column:9}},"5":{start:{line:69,column:10},end:{line:69,column:20}},"6":{start:{line:70,column:15},end:{line:72,column:9}},"7":{start:{line:71,column:10},end:{line:71,column:20}},"8":{start:{line:74,column:8},end:{line:76,column:9}},"9":{start:{line:75,column:10},end:{line:75,column:123}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:64,column:10},end:{line:64,column:11}},loc:{start:{line:64,column:29},end:{line:79,column:3}},line:64},"1":{name:"(anonymous_1)",decl:{start:{line:66,column:24},end:{line:66,column:25}},loc:{start:{line:66,column:40},end:{line:77,column:7}},line:66}},branchMap:{"0":{loc:{start:{line:68,column:8},end:{line:72,column:9}},type:"if",locations:[{start:{line:68,column:8},end:{line:72,column:9}},{start:{line:68,column:8},end:{line:72,column:9}}],line:68},"1":{loc:{start:{line:70,column:15},end:{line:72,column:9}},type:"if",locations:[{start:{line:70,column:15},end:{line:72,column:9}},{start:{line:70,column:15},end:{line:72,column:9}}],line:70},"2":{loc:{start:{line:74,column:8},end:{line:76,column:9}},type:"if",locations:[{start:{line:74,column:8},end:{line:76,column:9}},{start:{line:74,column:8},end:{line:76,column:9}}],line:74},"3":{loc:{start:{line:74,column:12},end:{line:74,column:127}},type:"binary-expr",locations:[{start:{line:74,column:12},end:{line:74,column:17}},{start:{line:74,column:21},end:{line:74,column:32}},{start:{line:74,column:36},end:{line:74,column:57}},{start:{line:74,column:61},end:{line:74,column:89}},{start:{line:74,column:93},end:{line:74,column:127}}],line:74}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4750097efa052f871a618a60e0dd59040dc1c1db"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1x2sbq673b=function(){return actualCoverage;};}return actualCoverage;}cov_1x2sbq673b();const read=(cov_1x2sbq673b().s[0]++,['readUInt8','readUInt16LE','readUInt16BE','readUInt32LE','readUInt32BE','readInt8','readInt16LE','readInt16BE','readInt32LE','readInt32BE','readFloatLE','readFloatBE','readDoubleLE','readDoubleBE']);const write=(cov_1x2sbq673b().s[1]++,['writeUInt8','writeUInt16LE','writeUInt16BE','writeUInt32LE','writeUInt32BE','writeInt8','writeInt16LE','writeInt16BE','writeInt32LE','writeInt32BE','writeFloatLE','writeFloatBE','writeDoubleLE','writeDoubleBE']);//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
cov_1x2sbq673b().s[2]++;module.exports={meta:{type:'error',docs:{description:'Detects calls to "buffer" with "noAssert" flag set.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-buffer-noassert.md'},__methodsToCheck:{read,write}},create:function(context){cov_1x2sbq673b().f[0]++;cov_1x2sbq673b().s[3]++;return{MemberExpression:function(node){cov_1x2sbq673b().f[1]++;let index;cov_1x2sbq673b().s[4]++;if(read.indexOf(node.property.name)!==-1){cov_1x2sbq673b().b[0][0]++;cov_1x2sbq673b().s[5]++;index=1;}else{cov_1x2sbq673b().b[0][1]++;cov_1x2sbq673b().s[6]++;if(write.indexOf(node.property.name)!==-1){cov_1x2sbq673b().b[1][0]++;cov_1x2sbq673b().s[7]++;index=2;}else{cov_1x2sbq673b().b[1][1]++;}}cov_1x2sbq673b().s[8]++;if((cov_1x2sbq673b().b[3][0]++,index)&&(cov_1x2sbq673b().b[3][1]++,node.parent)&&(cov_1x2sbq673b().b[3][2]++,node.parent.arguments)&&(cov_1x2sbq673b().b[3][3]++,node.parent.arguments[index])&&(cov_1x2sbq673b().b[3][4]++,node.parent.arguments[index].value)){cov_1x2sbq673b().b[2][0]++;cov_1x2sbq673b().s[9]++;return context.report({node:node,message:`Found Buffer.${node.property.name} with noAssert flag set true`});}else{cov_1x2sbq673b().b[2][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,