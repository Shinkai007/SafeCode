/**
 * Tries to detect crypto.pseudoRandomBytes cause it's not cryptographical strong
 * @author Adam Baldwin
 */'use strict';//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
function cov_meygn5t39(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-pseudoRandomBytes.js";var hash="483777b72db4b43ae10f1b6573a7d82ec7c69de3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-pseudoRandomBytes.js",statementMap:{"0":{start:{line:12,column:0},end:{line:31,column:2}},"1":{start:{line:23,column:4},end:{line:29,column:6}},"2":{start:{line:25,column:8},end:{line:27,column:9}},"3":{start:{line:26,column:10},end:{line:26,column:147}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:10},end:{line:22,column:11}},loc:{start:{line:22,column:29},end:{line:30,column:3}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:24,column:24},end:{line:24,column:25}},loc:{start:{line:24,column:40},end:{line:28,column:7}},line:24}},branchMap:{"0":{loc:{start:{line:25,column:8},end:{line:27,column:9}},type:"if",locations:[{start:{line:25,column:8},end:{line:27,column:9}},{start:{line:25,column:8},end:{line:27,column:9}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"483777b72db4b43ae10f1b6573a7d82ec7c69de3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_meygn5t39=function(){return actualCoverage;};}return actualCoverage;}cov_meygn5t39();cov_meygn5t39().s[0]++;module.exports={meta:{type:'error',docs:{description:'Detects if "pseudoRandomBytes()" is in use, which might not give you the randomness you need and expect.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-pseudoRandomBytes.md'}},create:function(context){cov_meygn5t39().f[0]++;cov_meygn5t39().s[1]++;return{MemberExpression:function(node){cov_meygn5t39().f[1]++;cov_meygn5t39().s[2]++;if(node.property.name==='pseudoRandomBytes'){cov_meygn5t39().b[0][0]++;cov_meygn5t39().s[3]++;return context.report({node:node,message:'Found crypto.pseudoRandomBytes which does not produce cryptographically strong numbers'});}else{cov_meygn5t39().b[0][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbWV5Z241dDM5IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtZXRhIiwiZG9jcyIsImRlc2NyaXB0aW9uIiwiY2F0ZWdvcnkiLCJyZWNvbW1lbmRlZCIsInVybCIsImNyZWF0ZSIsImNvbnRleHQiLCJNZW1iZXJFeHByZXNzaW9uIiwibm9kZSIsInByb3BlcnR5IiwicmVwb3J0IiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbImRldGVjdC1wc2V1ZG9SYW5kb21CeXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRyaWVzIHRvIGRldGVjdCBjcnlwdG8ucHNldWRvUmFuZG9tQnl0ZXMgY2F1c2UgaXQncyBub3QgY3J5cHRvZ3JhcGhpY2FsIHN0cm9uZ1xuICogQGF1dGhvciBBZGFtIEJhbGR3aW5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlIERlZmluaXRpb25cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBtZXRhOiB7XG4gICAgdHlwZTogJ2Vycm9yJyxcbiAgICBkb2NzOiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ0RldGVjdHMgaWYgXCJwc2V1ZG9SYW5kb21CeXRlcygpXCIgaXMgaW4gdXNlLCB3aGljaCBtaWdodCBub3QgZ2l2ZSB5b3UgdGhlIHJhbmRvbW5lc3MgeW91IG5lZWQgYW5kIGV4cGVjdC4nLFxuICAgICAgY2F0ZWdvcnk6ICdQb3NzaWJsZSBTZWN1cml0eSBWdWxuZXJhYmlsaXR5JyxcbiAgICAgIHJlY29tbWVuZGVkOiB0cnVlLFxuICAgICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC1jb21tdW5pdHkvZXNsaW50LXBsdWdpbi1zZWN1cml0eS9ibG9iL21haW4vZG9jcy9ydWxlcy9kZXRlY3QtcHNldWRvUmFuZG9tQnl0ZXMubWQnLFxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZTogZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgTWVtYmVyRXhwcmVzc2lvbjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUucHJvcGVydHkubmFtZSA9PT0gJ3BzZXVkb1JhbmRvbUJ5dGVzJykge1xuICAgICAgICAgIHJldHVybiBjb250ZXh0LnJlcG9ydCh7IG5vZGU6IG5vZGUsIG1lc3NhZ2U6ICdGb3VuZCBjcnlwdG8ucHNldWRvUmFuZG9tQnl0ZXMgd2hpY2ggZG9lcyBub3QgcHJvZHVjZSBjcnlwdG9ncmFwaGljYWxseSBzdHJvbmcgbnVtYmVycycgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfTtcbiAgfSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsWUFBWSxDQUVaO0FBQ0E7QUFDQTtBQUFBLFNBQUFBLGNBQUEsTUFBQUMsSUFBQSxpSEFBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsNkdBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsUUFBQUUsS0FBQSxPQUFBQyxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE1BQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxVQUFBSSxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE1BQUFLLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQUQsSUFBQSxNQUFBTyxTQUFBLE9BQUFELEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsS0FBQU8sSUFBQSxNQUFBQyxTQUFBLEdBQUFWLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE1BQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE1BQUFELElBQUEsTUFBQVUsQ0FBQSwyQkFBQUMsQ0FBQSxlQUFBQyxDQUFBLGFBQUFDLGVBQUEsNENBQUFwQixJQUFBLGlEQUFBcUIsUUFBQSxDQUFBcEIsTUFBQSxDQUFBRSxHQUFBLElBQUFGLE1BQUEsQ0FBQUUsR0FBQSxVQUFBa0IsUUFBQSxDQUFBdEIsSUFBQSxHQUFBc0IsUUFBQSxDQUFBdEIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQXFCLFFBQUEsQ0FBQXRCLElBQUEsRUFBQUssWUFBQSxNQUFBa0IsY0FBQSxDQUFBRCxRQUFBLENBQUF0QixJQUFBLEdBTVk7QUFBQUQsYUFBQSxTQUFBQSxDQUFBLFNBQUF3QixjQUFBLFdBQUFBLGNBQUEsRUFBQXhCLGFBQUEsR0FBQUEsYUFBQSxHQUFBbUIsQ0FBQSxNQUpaTSxNQUFNLENBQUNDLE9BQU8sQ0FBRyxDQUNmQyxJQUFJLENBQUUsQ0FDSlYsSUFBSSxDQUFFLE9BQU8sQ0FDYlcsSUFBSSxDQUFFLENBQ0pDLFdBQVcsQ0FBRSwwR0FBMEcsQ0FDdkhDLFFBQVEsQ0FBRSxpQ0FBaUMsQ0FDM0NDLFdBQVcsQ0FBRSxJQUFJLENBQ2pCQyxHQUFHLENBQUUsNkdBQ1AsQ0FDRixDQUFDLENBQ0RDLE1BQU0sQ0FBRSxRQUFBQSxDQUFVQyxPQUFPLENBQUUsQ0FBQWxDLGFBQUEsR0FBQW9CLENBQUEsTUFBQXBCLGFBQUEsR0FBQW1CLENBQUEsTUFDekIsTUFBTyxDQUNMZ0IsZ0JBQWdCLENBQUUsUUFBQUEsQ0FBVUMsSUFBSSxDQUFFLENBQUFwQyxhQUFBLEdBQUFvQixDQUFBLE1BQUFwQixhQUFBLEdBQUFtQixDQUFBLE1BQ2hDLEdBQUlpQixJQUFJLENBQUNDLFFBQVEsQ0FBQ3hCLElBQUksR0FBSyxtQkFBbUIsQ0FBRSxDQUFBYixhQUFBLEdBQUFxQixDQUFBLFNBQUFyQixhQUFBLEdBQUFtQixDQUFBLE1BQzlDLE1BQU8sQ0FBQWUsT0FBTyxDQUFDSSxNQUFNLENBQUMsQ0FBRUYsSUFBSSxDQUFFQSxJQUFJLENBQUVHLE9BQU8sQ0FBRSx3RkFBeUYsQ0FBQyxDQUFDLENBQzFJLENBQUMsS0FBQXZDLGFBQUEsR0FBQXFCLENBQUEsVUFDSCxDQUNGLENBQUMsQ0FDSCxDQUNGLENBQUMifQ==