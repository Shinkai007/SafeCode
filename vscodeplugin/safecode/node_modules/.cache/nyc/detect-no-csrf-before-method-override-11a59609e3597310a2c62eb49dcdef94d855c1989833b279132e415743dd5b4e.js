/**
 * Check and see if CSRF middleware is before methodOverride
 * @author Adam Baldwin
 */'use strict';//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
function cov_1b7dtyyuie(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-no-csrf-before-method-override.js";var hash="56cebf02a8c17d3497716519251d2ce8bf8a3ac0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-no-csrf-before-method-override.js",statementMap:{"0":{start:{line:12,column:0},end:{line:46,column:2}},"1":{start:{line:23,column:15},end:{line:23,column:20}},"2":{start:{line:25,column:4},end:{line:44,column:6}},"3":{start:{line:27,column:22},end:{line:27,column:64}},"4":{start:{line:28,column:26},end:{line:28,column:37}},"5":{start:{line:30,column:8},end:{line:42,column:9}},"6":{start:{line:31,column:10},end:{line:33,column:11}},"7":{start:{line:32,column:12},end:{line:32,column:19}},"8":{start:{line:35,column:10},end:{line:37,column:11}},"9":{start:{line:36,column:12},end:{line:36,column:119}},"10":{start:{line:38,column:10},end:{line:41,column:11}},"11":{start:{line:40,column:12},end:{line:40,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:10},end:{line:22,column:11}},loc:{start:{line:22,column:29},end:{line:45,column:3}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:22},end:{line:26,column:23}},loc:{start:{line:26,column:38},end:{line:43,column:7}},line:26}},branchMap:{"0":{loc:{start:{line:30,column:8},end:{line:42,column:9}},type:"if",locations:[{start:{line:30,column:8},end:{line:42,column:9}},{start:{line:30,column:8},end:{line:42,column:9}}],line:30},"1":{loc:{start:{line:31,column:10},end:{line:33,column:11}},type:"if",locations:[{start:{line:31,column:10},end:{line:33,column:11}},{start:{line:31,column:10},end:{line:33,column:11}}],line:31},"2":{loc:{start:{line:31,column:14},end:{line:31,column:51}},type:"binary-expr",locations:[{start:{line:31,column:14},end:{line:31,column:26}},{start:{line:31,column:30},end:{line:31,column:51}}],line:31},"3":{loc:{start:{line:35,column:10},end:{line:37,column:11}},type:"if",locations:[{start:{line:35,column:10},end:{line:37,column:11}},{start:{line:35,column:10},end:{line:37,column:11}}],line:35},"4":{loc:{start:{line:35,column:14},end:{line:35,column:68}},type:"binary-expr",locations:[{start:{line:35,column:14},end:{line:35,column:60}},{start:{line:35,column:64},end:{line:35,column:68}}],line:35},"5":{loc:{start:{line:38,column:10},end:{line:41,column:11}},type:"if",locations:[{start:{line:38,column:10},end:{line:41,column:11}},{start:{line:38,column:10},end:{line:41,column:11}}],line:38}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"56cebf02a8c17d3497716519251d2ce8bf8a3ac0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1b7dtyyuie=function(){return actualCoverage;};}return actualCoverage;}cov_1b7dtyyuie();cov_1b7dtyyuie().s[0]++;module.exports={meta:{type:'error',docs:{description:'Detects Express "csrf" middleware setup before "method-override" middleware.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-no-csrf-before-method-override.md'}},create:function(context){cov_1b7dtyyuie().f[0]++;let csrf=(cov_1b7dtyyuie().s[1]++,false);cov_1b7dtyyuie().s[2]++;return{CallExpression:function(node){cov_1b7dtyyuie().f[1]++;const token=(cov_1b7dtyyuie().s[3]++,context.getSourceCode().getTokens(node)[0]);const nodeValue=(cov_1b7dtyyuie().s[4]++,token.value);cov_1b7dtyyuie().s[5]++;if(nodeValue==='express'){cov_1b7dtyyuie().b[0][0]++;cov_1b7dtyyuie().s[6]++;if((cov_1b7dtyyuie().b[2][0]++,!node.callee)||(cov_1b7dtyyuie().b[2][1]++,!node.callee.property)){cov_1b7dtyyuie().b[1][0]++;cov_1b7dtyyuie().s[7]++;return;}else{cov_1b7dtyyuie().b[1][1]++;}cov_1b7dtyyuie().s[8]++;if((cov_1b7dtyyuie().b[4][0]++,node.callee.property.name==='methodOverride')&&(cov_1b7dtyyuie().b[4][1]++,csrf)){cov_1b7dtyyuie().b[3][0]++;cov_1b7dtyyuie().s[9]++;context.report({node:node,message:'express.csrf() middleware found before express.methodOverride()'});}else{cov_1b7dtyyuie().b[3][1]++;}cov_1b7dtyyuie().s[10]++;if(node.callee.property.name==='csrf'){cov_1b7dtyyuie().b[5][0]++;cov_1b7dtyyuie().s[11]++;// Keep track of found CSRF
csrf=true;}else{cov_1b7dtyyuie().b[5][1]++;}}else{cov_1b7dtyyuie().b[0][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,