function cov_22x9pbbinx(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/utils/find-variable.js";var hash="d59e6a4547f5530bf30384391a5e1b065ccb4c00";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/utils/find-variable.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:43}},"1":{start:{line:10,column:2},end:{line:16,column:3}},"2":{start:{line:11,column:21},end:{line:11,column:40}},"3":{start:{line:12,column:4},end:{line:14,column:5}},"4":{start:{line:13,column:6},end:{line:13,column:22}},"5":{start:{line:15,column:4},end:{line:15,column:24}},"6":{start:{line:17,column:2},end:{line:17,column:14}}},fnMap:{"0":{name:"findVariable",decl:{start:{line:9,column:9},end:{line:9,column:21}},loc:{start:{line:9,column:35},end:{line:18,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:12,column:4},end:{line:14,column:5}},type:"if",locations:[{start:{line:12,column:4},end:{line:14,column:5}},{start:{line:12,column:4},end:{line:14,column:5}}],line:12}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d59e6a4547f5530bf30384391a5e1b065ccb4c00"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22x9pbbinx=function(){return actualCoverage;};}return actualCoverage;}cov_22x9pbbinx();cov_22x9pbbinx().s[0]++;module.exports.findVariable=findVariable;/**
 * Find the variable of a given name.
 * @param {import("eslint").Scope.Scope} scope the scope to start finding
 * @param {string} name the variable name to find.
 * @returns {import("eslint").Scope.Variable | null}
 */function findVariable(scope,name){cov_22x9pbbinx().f[0]++;cov_22x9pbbinx().s[1]++;while(scope!=null){const variable=(cov_22x9pbbinx().s[2]++,scope.set.get(name));cov_22x9pbbinx().s[3]++;if(variable!=null){cov_22x9pbbinx().b[0][0]++;cov_22x9pbbinx().s[4]++;return variable;}else{cov_22x9pbbinx().b[0][1]++;}cov_22x9pbbinx().s[5]++;scope=scope.upper;}cov_22x9pbbinx().s[6]++;return null;}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjJ4OXBiYmlueCIsImFjdHVhbENvdmVyYWdlIiwicyIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kVmFyaWFibGUiLCJzY29wZSIsIm5hbWUiLCJmIiwidmFyaWFibGUiLCJzZXQiLCJnZXQiLCJiIiwidXBwZXIiXSwic291cmNlcyI6WyJmaW5kLXZhcmlhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzLmZpbmRWYXJpYWJsZSA9IGZpbmRWYXJpYWJsZTtcblxuLyoqXG4gKiBGaW5kIHRoZSB2YXJpYWJsZSBvZiBhIGdpdmVuIG5hbWUuXG4gKiBAcGFyYW0ge2ltcG9ydChcImVzbGludFwiKS5TY29wZS5TY29wZX0gc2NvcGUgdGhlIHNjb3BlIHRvIHN0YXJ0IGZpbmRpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIHRoZSB2YXJpYWJsZSBuYW1lIHRvIGZpbmQuXG4gKiBAcmV0dXJucyB7aW1wb3J0KFwiZXNsaW50XCIpLlNjb3BlLlZhcmlhYmxlIHwgbnVsbH1cbiAqL1xuZnVuY3Rpb24gZmluZFZhcmlhYmxlKHNjb3BlLCBuYW1lKSB7XG4gIHdoaWxlIChzY29wZSAhPSBudWxsKSB7XG4gICAgY29uc3QgdmFyaWFibGUgPSBzY29wZS5zZXQuZ2V0KG5hbWUpO1xuICAgIGlmICh2YXJpYWJsZSAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gdmFyaWFibGU7XG4gICAgfVxuICAgIHNjb3BlID0gc2NvcGUudXBwZXI7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG4iXSwibWFwcGluZ3MiOiJ5NkNBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBQUFBLGNBQUEsR0FBQUUsQ0FBQSxNQWZaQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ0MsWUFBWSxDQUFHQSxZQUFZLENBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLFFBQVMsQ0FBQUEsWUFBWUEsQ0FBQ0MsS0FBSyxDQUFFQyxJQUFJLENBQUUsQ0FBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQUFSLGNBQUEsR0FBQUUsQ0FBQSxNQUNqQyxNQUFPSSxLQUFLLEVBQUksSUFBSSxDQUFFLENBQ3BCLEtBQU0sQ0FBQUcsUUFBUSxFQUFBVCxjQUFBLEdBQUFFLENBQUEsTUFBR0ksS0FBSyxDQUFDSSxHQUFHLENBQUNDLEdBQUcsQ0FBQ0osSUFBSSxDQUFDLEVBQUNQLGNBQUEsR0FBQUUsQ0FBQSxNQUNyQyxHQUFJTyxRQUFRLEVBQUksSUFBSSxDQUFFLENBQUFULGNBQUEsR0FBQVksQ0FBQSxTQUFBWixjQUFBLEdBQUFFLENBQUEsTUFDcEIsTUFBTyxDQUFBTyxRQUFRLENBQ2pCLENBQUMsS0FBQVQsY0FBQSxHQUFBWSxDQUFBLFVBQUFaLGNBQUEsR0FBQUUsQ0FBQSxNQUNESSxLQUFLLENBQUdBLEtBQUssQ0FBQ08sS0FBSyxDQUNyQixDQUFDYixjQUFBLEdBQUFFLENBQUEsTUFDRCxNQUFPLEtBQUksQ0FDYiJ9