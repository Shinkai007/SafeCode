/**
 * Tries to detect RegExp's created from non-literal strings.
 * @author Jon Lamendola
 */'use strict';function cov_2l2ij17wkk(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-regexp.js";var hash="b2885b9eded8c9da3eae912e123f2d20d0c7c7d9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-regexp.js",statementMap:{"0":{start:{line:8,column:31},end:{line:8,column:71}},"1":{start:{line:14,column:0},end:{line:43,column:2}},"2":{start:{line:25,column:4},end:{line:41,column:6}},"3":{start:{line:27,column:8},end:{line:39,column:9}},"4":{start:{line:28,column:23},end:{line:28,column:37}},"5":{start:{line:29,column:10},end:{line:38,column:11}},"6":{start:{line:37,column:12},end:{line:37,column:111}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:10},end:{line:24,column:11}},loc:{start:{line:24,column:29},end:{line:42,column:3}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:21},end:{line:26,column:22}},loc:{start:{line:26,column:37},end:{line:40,column:7}},line:26}},branchMap:{"0":{loc:{start:{line:27,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:39,column:9}},{start:{line:27,column:8},end:{line:39,column:9}}],line:27},"1":{loc:{start:{line:29,column:10},end:{line:38,column:11}},type:"if",locations:[{start:{line:29,column:10},end:{line:38,column:11}},{start:{line:29,column:10},end:{line:38,column:11}}],line:29},"2":{loc:{start:{line:30,column:12},end:{line:35,column:14}},type:"binary-expr",locations:[{start:{line:30,column:12},end:{line:30,column:16}},{start:{line:31,column:12},end:{line:31,column:27}},{start:{line:32,column:12},end:{line:35,column:14}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b2885b9eded8c9da3eae912e123f2d20d0c7c7d9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2l2ij17wkk=function(){return actualCoverage;};}return actualCoverage;}cov_2l2ij17wkk();const{isStaticExpression}=(cov_2l2ij17wkk().s[0]++,require('../utils/is-static-expression'));//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
cov_2l2ij17wkk().s[1]++;module.exports={meta:{type:'error',docs:{description:'Detects "RegExp(variable)", which might allow an attacker to DOS your server with a long-running regular expression.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-regexp.md'}},create:function(context){cov_2l2ij17wkk().f[0]++;cov_2l2ij17wkk().s[2]++;return{NewExpression:function(node){cov_2l2ij17wkk().f[1]++;cov_2l2ij17wkk().s[3]++;if(node.callee.name==='RegExp'){cov_2l2ij17wkk().b[0][0]++;const args=(cov_2l2ij17wkk().s[4]++,node.arguments);cov_2l2ij17wkk().s[5]++;if((cov_2l2ij17wkk().b[2][0]++,args)&&(cov_2l2ij17wkk().b[2][1]++,args.length>0)&&(cov_2l2ij17wkk().b[2][2]++,!isStaticExpression({node:args[0],scope:context.getScope()}))){cov_2l2ij17wkk().b[1][0]++;cov_2l2ij17wkk().s[6]++;return context.report({node:node,message:'Found non-literal argument to RegExp Constructor'});}else{cov_2l2ij17wkk().b[1][1]++;}}else{cov_2l2ij17wkk().b[0][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmwyaWoxN3drayIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJpc1N0YXRpY0V4cHJlc3Npb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1ldGEiLCJkb2NzIiwiZGVzY3JpcHRpb24iLCJjYXRlZ29yeSIsInJlY29tbWVuZGVkIiwidXJsIiwiY3JlYXRlIiwiY29udGV4dCIsIk5ld0V4cHJlc3Npb24iLCJub2RlIiwiY2FsbGVlIiwiYXJncyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNjb3BlIiwiZ2V0U2NvcGUiLCJyZXBvcnQiLCJtZXNzYWdlIl0sInNvdXJjZXMiOlsiZGV0ZWN0LW5vbi1saXRlcmFsLXJlZ2V4cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRyaWVzIHRvIGRldGVjdCBSZWdFeHAncyBjcmVhdGVkIGZyb20gbm9uLWxpdGVyYWwgc3RyaW5ncy5cbiAqIEBhdXRob3IgSm9uIExhbWVuZG9sYVxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBpc1N0YXRpY0V4cHJlc3Npb24gfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2lzLXN0YXRpYy1leHByZXNzaW9uJyk7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBSdWxlIERlZmluaXRpb25cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBtZXRhOiB7XG4gICAgdHlwZTogJ2Vycm9yJyxcbiAgICBkb2NzOiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ0RldGVjdHMgXCJSZWdFeHAodmFyaWFibGUpXCIsIHdoaWNoIG1pZ2h0IGFsbG93IGFuIGF0dGFja2VyIHRvIERPUyB5b3VyIHNlcnZlciB3aXRoIGEgbG9uZy1ydW5uaW5nIHJlZ3VsYXIgZXhwcmVzc2lvbi4nLFxuICAgICAgY2F0ZWdvcnk6ICdQb3NzaWJsZSBTZWN1cml0eSBWdWxuZXJhYmlsaXR5JyxcbiAgICAgIHJlY29tbWVuZGVkOiB0cnVlLFxuICAgICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC1jb21tdW5pdHkvZXNsaW50LXBsdWdpbi1zZWN1cml0eS9ibG9iL21haW4vZG9jcy9ydWxlcy9kZXRlY3Qtbm9uLWxpdGVyYWwtcmVnZXhwLm1kJyxcbiAgICB9LFxuICB9LFxuICBjcmVhdGU6IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIE5ld0V4cHJlc3Npb246IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlLmNhbGxlZS5uYW1lID09PSAnUmVnRXhwJykge1xuICAgICAgICAgIGNvbnN0IGFyZ3MgPSBub2RlLmFyZ3VtZW50cztcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICBhcmdzICYmXG4gICAgICAgICAgICBhcmdzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgICAgICFpc1N0YXRpY0V4cHJlc3Npb24oe1xuICAgICAgICAgICAgICBub2RlOiBhcmdzWzBdLFxuICAgICAgICAgICAgICBzY29wZTogY29udGV4dC5nZXRTY29wZSgpLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBjb250ZXh0LnJlcG9ydCh7IG5vZGU6IG5vZGUsIG1lc3NhZ2U6ICdGb3VuZCBub24tbGl0ZXJhbCBhcmd1bWVudCB0byBSZWdFeHAgQ29uc3RydWN0b3InIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9O1xuICB9LFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsR0FFQSxZQUFZLENBQUMsU0FBQUEsZUFBQSxNQUFBQyxJQUFBLGtIQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSw4R0FBQU0sWUFBQSxPQUFBQyxLQUFBLEVBQUFDLElBQUEsR0FBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsR0FBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxVQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxXQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxRQUFBRSxLQUFBLE9BQUFDLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLFVBQUFJLElBQUEsaUJBQUFDLElBQUEsRUFBQU4sS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUssR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBRCxJQUFBLE1BQUFPLFNBQUEsT0FBQUQsR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxLQUFBTyxJQUFBLE1BQUFDLFNBQUEsR0FBQVYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQUQsSUFBQSxVQUFBTSxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE1BQUFPLElBQUEsTUFBQUMsU0FBQSxHQUFBVixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxPQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxPQUFBRCxJQUFBLFVBQUFNLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQU8sSUFBQSxlQUFBQyxTQUFBLEdBQUFWLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9B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