/**
 * Tries to detect crypto.pseudoRandomBytes cause it's not cryptographical strong
 * @author Adam Baldwin
 */"use strict";//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
function cov_meygn5t39(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-pseudoRandomBytes.js";var hash="416a18fe49437636f4e221e7b16d4903bbbbe93a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-pseudoRandomBytes.js",statementMap:{"0":{start:{line:12,column:0},end:{line:42,column:2}},"1":{start:{line:24,column:4},end:{line:40,column:6}},"2":{start:{line:26,column:8},end:{line:38,column:9}},"3":{start:{line:27,column:29},end:{line:27,column:52}},"4":{start:{line:28,column:27},end:{line:28,column:51}},"5":{start:{line:29,column:10},end:{line:29,column:44}},"6":{start:{line:30,column:10},end:{line:37,column:13}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:10},end:{line:23,column:11}},loc:{start:{line:23,column:29},end:{line:41,column:3}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:24},end:{line:25,column:25}},loc:{start:{line:25,column:40},end:{line:39,column:7}},line:25}},branchMap:{"0":{loc:{start:{line:26,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:26,column:8},end:{line:38,column:9}},{start:{line:26,column:8},end:{line:38,column:9}}],line:26}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"416a18fe49437636f4e221e7b16d4903bbbbe93a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_meygn5t39=function(){return actualCoverage;};}return actualCoverage;}cov_meygn5t39();cov_meygn5t39().s[0]++;module.exports={meta:{type:"error",docs:{description:'Detects if "pseudoRandomBytes()" is in use, which might not give you the randomness you need and expect.',category:"Possible Security Vulnerability",recommended:true,url:"https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-pseudoRandomBytes.md"}},create:function(context){cov_meygn5t39().f[0]++;cov_meygn5t39().s[1]++;return{MemberExpression:function(node){cov_meygn5t39().f[1]++;cov_meygn5t39().s[2]++;if(node.property.name==="pseudoRandomBytes"){cov_meygn5t39().b[0][0]++;const sourceCode=(cov_meygn5t39().s[3]++,context.getSourceCode());const codeText=(cov_meygn5t39().s[4]++,sourceCode.getText(node));// 获取当前节点的文本内容
cov_meygn5t39().s[5]++;console.log("codeText",codeText);cov_meygn5t39().s[6]++;return context.report({node:node,message:"Found crypto.pseudoRandomBytes which does not produce cryptographically strong numbers : {{codeSnippet}}",data:{codeSnippet:codeText}});}else{cov_meygn5t39().b[0][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbWV5Z241dDM5IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtZXRhIiwiZG9jcyIsImRlc2NyaXB0aW9uIiwiY2F0ZWdvcnkiLCJyZWNvbW1lbmRlZCIsInVybCIsImNyZWF0ZSIsImNvbnRleHQiLCJNZW1iZXJFeHByZXNzaW9uIiwibm9kZSIsInByb3BlcnR5Iiwic291cmNlQ29kZSIsImdldFNvdXJjZUNvZGUiLCJjb2RlVGV4dCIsImdldFRleHQiLCJjb25zb2xlIiwibG9nIiwicmVwb3J0IiwibWVzc2FnZSIsImRhdGEiLCJjb2RlU25pcHBldCJdLCJzb3VyY2VzIjpbImRldGVjdC1wc2V1ZG9SYW5kb21CeXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRyaWVzIHRvIGRldGVjdCBjcnlwdG8ucHNldWRvUmFuZG9tQnl0ZXMgY2F1c2UgaXQncyBub3QgY3J5cHRvZ3JhcGhpY2FsIHN0cm9uZ1xuICogQGF1dGhvciBBZGFtIEJhbGR3aW5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJ1bGUgRGVmaW5pdGlvblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG1ldGE6IHtcbiAgICB0eXBlOiBcImVycm9yXCIsXG4gICAgZG9jczoge1xuICAgICAgZGVzY3JpcHRpb246XG4gICAgICAgICdEZXRlY3RzIGlmIFwicHNldWRvUmFuZG9tQnl0ZXMoKVwiIGlzIGluIHVzZSwgd2hpY2ggbWlnaHQgbm90IGdpdmUgeW91IHRoZSByYW5kb21uZXNzIHlvdSBuZWVkIGFuZCBleHBlY3QuJyxcbiAgICAgIGNhdGVnb3J5OiBcIlBvc3NpYmxlIFNlY3VyaXR5IFZ1bG5lcmFiaWxpdHlcIixcbiAgICAgIHJlY29tbWVuZGVkOiB0cnVlLFxuICAgICAgdXJsOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQtY29tbXVuaXR5L2VzbGludC1wbHVnaW4tc2VjdXJpdHkvYmxvYi9tYWluL2RvY3MvcnVsZXMvZGV0ZWN0LXBzZXVkb1JhbmRvbUJ5dGVzLm1kXCIsXG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlOiBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgIHJldHVybiB7XG4gICAgICBNZW1iZXJFeHByZXNzaW9uOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5wcm9wZXJ0eS5uYW1lID09PSBcInBzZXVkb1JhbmRvbUJ5dGVzXCIpIHtcbiAgICAgICAgICBjb25zdCBzb3VyY2VDb2RlID0gY29udGV4dC5nZXRTb3VyY2VDb2RlKCk7XG4gICAgICAgICAgY29uc3QgY29kZVRleHQgPSBzb3VyY2VDb2RlLmdldFRleHQobm9kZSk7IC8vIOiOt+WPluW9k+WJjeiKgueCueeahOaWh+acrOWGheWuuVxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiY29kZVRleHRcIiwgY29kZVRleHQpO1xuICAgICAgICAgIHJldHVybiBjb250ZXh0LnJlcG9ydCh7XG4gICAgICAgICAgICBub2RlOiBub2RlLFxuICAgICAgICAgICAgbWVzc2FnZTpcbiAgICAgICAgICAgICAgXCJGb3VuZCBjcnlwdG8ucHNldWRvUmFuZG9tQnl0ZXMgd2hpY2ggZG9lcyBub3QgcHJvZHVjZSBjcnlwdG9ncmFwaGljYWxseSBzdHJvbmcgbnVtYmVycyA6IHt7Y29kZVNuaXBwZXR9fVwiLFxuICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgY29kZVNuaXBwZXQ6IGNvZGVUZXh0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfTtcbiAgfSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsWUFBWSxDQUVaO0FBQ0E7QUFDQTtBQUFBLFNBQUFBLGNBQUEsTUFBQUMsSUFBQSxpSEFBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEsNkdBQUFNLFlBQUEsT0FBQUMsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsSUFBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsVUFBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsV0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUUsS0FBQSxPQUFBQyxJQUFBLGlCQUFBQyxJQUFBLEVBQUFOLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFB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