/**
 * Tries to detect calls to require with non-literal argument
 * @author Adam Baldwin
 */'use strict';function cov_17rzul0hqz(){var path="/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-require.js";var hash="b87d8c63114927414dbfd1710fac35286d6e7927";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/shinkai/Documents/cs+\u6BD5\u8BBE/SafeCode/vscodeplugin/safecode/rules/detect-non-literal-require.js",statementMap:{"0":{start:{line:8,column:31},end:{line:8,column:71}},"1":{start:{line:14,column:0},end:{line:43,column:2}},"2":{start:{line:25,column:4},end:{line:41,column:6}},"3":{start:{line:27,column:8},end:{line:39,column:9}},"4":{start:{line:28,column:23},end:{line:28,column:37}},"5":{start:{line:29,column:10},end:{line:38,column:11}},"6":{start:{line:37,column:12},end:{line:37,column:100}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:10},end:{line:24,column:11}},loc:{start:{line:24,column:29},end:{line:42,column:3}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:22},end:{line:26,column:23}},loc:{start:{line:26,column:38},end:{line:40,column:7}},line:26}},branchMap:{"0":{loc:{start:{line:27,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:39,column:9}},{start:{line:27,column:8},end:{line:39,column:9}}],line:27},"1":{loc:{start:{line:29,column:10},end:{line:38,column:11}},type:"if",locations:[{start:{line:29,column:10},end:{line:38,column:11}},{start:{line:29,column:10},end:{line:38,column:11}}],line:29},"2":{loc:{start:{line:30,column:12},end:{line:35,column:14}},type:"binary-expr",locations:[{start:{line:30,column:12},end:{line:30,column:16}},{start:{line:31,column:12},end:{line:31,column:27}},{start:{line:32,column:12},end:{line:35,column:14}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b87d8c63114927414dbfd1710fac35286d6e7927"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_17rzul0hqz=function(){return actualCoverage;};}return actualCoverage;}cov_17rzul0hqz();const{isStaticExpression}=(cov_17rzul0hqz().s[0]++,require('../utils/is-static-expression'));//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------
cov_17rzul0hqz().s[1]++;module.exports={meta:{type:'error',docs:{description:'Detects "require(variable)", which might allow an attacker to load and run arbitrary code, or access arbitrary files on disk.',category:'Possible Security Vulnerability',recommended:true,url:'https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-require.md'}},create:function(context){cov_17rzul0hqz().f[0]++;cov_17rzul0hqz().s[2]++;return{CallExpression:function(node){cov_17rzul0hqz().f[1]++;cov_17rzul0hqz().s[3]++;if(node.callee.name==='require'){cov_17rzul0hqz().b[0][0]++;const args=(cov_17rzul0hqz().s[4]++,node.arguments);cov_17rzul0hqz().s[5]++;if((cov_17rzul0hqz().b[2][0]++,args)&&(cov_17rzul0hqz().b[2][1]++,args.length>0)&&(cov_17rzul0hqz().b[2][2]++,!isStaticExpression({node:args[0],scope:context.getScope()}))){cov_17rzul0hqz().b[1][0]++;cov_17rzul0hqz().s[6]++;return context.report({node:node,message:'Found non-literal argument in require'});}else{cov_17rzul0hqz().b[1][1]++;}}else{cov_17rzul0hqz().b[0][1]++;}}};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTdyenVsMGhxeiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJpc1N0YXRpY0V4cHJlc3Npb24iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1ldGEiLCJkb2NzIiwiZGVzY3JpcHRpb24iLCJjYXRlZ29yeSIsInJlY29tbWVuZGVkIiwidXJsIiwiY3JlYXRlIiwiY29udGV4dCIsIkNhbGxFeHByZXNzaW9uIiwibm9kZSIsImNhbGxlZSIsImFyZ3MiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzY29wZSIsImdldFNjb3BlIiwicmVwb3J0IiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbImRldGVjdC1ub24tbGl0ZXJhbC1yZXF1aXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVHJpZXMgdG8gZGV0ZWN0IGNhbGxzIHRvIHJlcXVpcmUgd2l0aCBub24tbGl0ZXJhbCBhcmd1bWVudFxuICogQGF1dGhvciBBZGFtIEJhbGR3aW5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IHsgaXNTdGF0aWNFeHByZXNzaW9uIH0gPSByZXF1aXJlKCcuLi91dGlscy9pcy1zdGF0aWMtZXhwcmVzc2lvbicpO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUnVsZSBEZWZpbml0aW9uXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbWV0YToge1xuICAgIHR5cGU6ICdlcnJvcicsXG4gICAgZG9jczoge1xuICAgICAgZGVzY3JpcHRpb246ICdEZXRlY3RzIFwicmVxdWlyZSh2YXJpYWJsZSlcIiwgd2hpY2ggbWlnaHQgYWxsb3cgYW4gYXR0YWNrZXIgdG8gbG9hZCBhbmQgcnVuIGFyYml0cmFyeSBjb2RlLCBvciBhY2Nlc3MgYXJiaXRyYXJ5IGZpbGVzIG9uIGRpc2suJyxcbiAgICAgIGNhdGVnb3J5OiAnUG9zc2libGUgU2VjdXJpdHkgVnVsbmVyYWJpbGl0eScsXG4gICAgICByZWNvbW1lbmRlZDogdHJ1ZSxcbiAgICAgIHVybDogJ2h0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQtY29tbXVuaXR5L2VzbGludC1wbHVnaW4tc2VjdXJpdHkvYmxvYi9tYWluL2RvY3MvcnVsZXMvZGV0ZWN0LW5vbi1saXRlcmFsLXJlcXVpcmUubWQnLFxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZTogZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgQ2FsbEV4cHJlc3Npb246IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlLmNhbGxlZS5uYW1lID09PSAncmVxdWlyZScpIHtcbiAgICAgICAgICBjb25zdCBhcmdzID0gbm9kZS5hcmd1bWVudHM7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgYXJncyAmJlxuICAgICAgICAgICAgYXJncy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICAhaXNTdGF0aWNFeHByZXNzaW9uKHtcbiAgICAgICAgICAgICAgbm9kZTogYXJnc1swXSxcbiAgICAgICAgICAgICAgc2NvcGU6IGNvbnRleHQuZ2V0U2NvcGUoKSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dC5yZXBvcnQoeyBub2RlOiBub2RlLCBtZXNzYWdlOiAnRm91bmQgbm9uLWxpdGVyYWwgYXJndW1lbnQgaW4gcmVxdWlyZScgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH07XG4gIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxHQUVBLFlBQVksQ0FBQyxTQUFBQSxlQUFBLE1BQUFDLElBQUEsbUhBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLCtHQUFBTSxZQUFBLE9BQUFDLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFVBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLFFBQUFFLEtBQUEsT0FBQUMsSUFBQSxpQkFBQUMsSUFBQSxFQUFBTixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBSyxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFELElBQUEsVUFBQUksSUFBQSxpQkFBQUMsSUFBQSxFQUFBTixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBSyxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFELElBQUEsTUFBQU8sU0FBQSxPQUFBRCxHQUFBLEVBQUFQLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLEtBQUFPLElBQUEsTUFBQUMsU0FBQSxHQUFBVixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBRixLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxJQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBRCxJQUFBLFVBQUFNLEdBQUEsRUFBQVAsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsTUFBQU8sSUFBQSxNQUFBQyxTQUFBLEdBQUFWLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFELElBQUEsVUFBQU0sR0FBQSxFQUFBUCxLQUFBLEVBQUFDLElBQUEsSUFBQUMsTUFBQSxLQUFBQyxHQUFBLEVBQUFGLElBQUEsSUFBQUMsTUFBQSxNQUFBTyxJQUFBLGVBQUFDLFNBQUEsR0FBQVYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUYsS0FBQSxFQUFBQyxJQUFBLElBQUFDLE1BQUEsS0FBQUMsR0FBQSxFQUFBRixJQUFBLElBQUFDLE1BQUEsT0FBQUQsSUFBQSxNQUFBVSxDQUFBLDZDQUFBQyxDQUFBLGVBQUFDLENBQUEsbUNBQUFDLGVBQUEsNENBQUFwQixJQUFBLGlEQUFBcUIsUUFBQSxDQUFBcEIsTUFBQSxDQUFBRSxHQUFBLElBQUFGLE1BQUEsQ0FBQUUsR0FBQSxVQUFBa0IsUUFBQSxDQUFBdEIsSUFBQSxHQUFBc0IsUUFBQSxDQUFBdEIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQXFCLFFBQUEsQ0FBQXRCLElBQUEsRUFBQUssWUFBQSxNQUFBa0IsY0FBQSxDQUFBRCxRQUFBLENBQUF0QixJQUFBLEdBVUQ7QUFBQUQsY0FBQSxTQUFBQSxDQUFBLFNBQUF3QixjQUFBLFdBQUFBLGNBQUEsRUFBQXhCLGNBQUEsR0FSWixLQUFNLENBQUV5QixrQkFBbUIsQ0FBQyxFQUFBekIsY0FBQSxHQUFBbUIsQ0FBQSxNQUFHTyxPQUFPLENBQUMsK0JBQStCLENBQUMsRUFFdkU7QUFDQTtBQUNBO0FBQUExQixjQUFBLEdBQUFtQixDQUFBLE1BRUFRLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQ2ZDLElBQUksQ0FBRSxDQUNKWixJQUFJLENBQUUsT0FBTyxDQUNiYSxJQUFJLENBQUUsQ0FDSkMsV0FBVyxDQUFFLCtIQUErSCxDQUM1SUMsUUFBUSxDQUFFLGlDQUFpQyxDQUMzQ0MsV0FBVyxDQUFFLElBQUksQ0FDakJDLEdBQUcsQ0FBRSwrR0FDUCxDQUNGLENBQUMsQ0FDREMsTUFBTSxDQUFFLFFBQUFBLENBQVVDLE9BQU8sQ0FBRSxDQUFBcEMsY0FBQSxHQUFBb0IsQ0FBQSxNQUFBcEIsY0FBQSxHQUFBbUIsQ0FBQSxNQUN6QixNQUFPLENBQ0xrQixjQUFjLENBQUUsUUFBQUEsQ0FBVUMsSUFBSSxDQUFFLENBQUF0QyxjQUFBLEdBQUFvQixDQUFBLE1BQUFwQixjQUFBLEdBQUFtQixDQUFBLE1BQzlCLEdBQUltQixJQUFJLENBQUNDLE1BQU0sQ0FBQzFCLElBQUksR0FBSyxTQUFTLENBQUUsQ0FBQWIsY0FBQSxHQUFBcUIsQ0FBQSxTQUNsQyxLQUFNLENBQUFtQixJQUFJLEVBQUF4QyxjQUFBLEdBQUFtQixDQUFBLE1BQUdtQixJQUFJLENBQUNHLFNBQVMsRUFBQ3pDLGNBQUEsR0FBQW1CLENBQUEsTUFDNUIsR0FDRSxDQUFBbkIsY0FBQSxHQUFBcUIsQ0FBQSxTQUFBbUIsSUFBSSxJQUFBeEMsY0FBQSxHQUFBcUIsQ0FBQSxTQUNKbUIsSUFBSSxDQUFDRSxNQUFNLENBQUcsQ0FBQyxJQUFBMUMsY0FBQSxHQUFBcUIsQ0FBQSxTQUNmLENBQUNJLGtCQUFrQixDQUFDLENBQ2xCYSxJQUFJLENBQUVFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDYkcsS0FBSyxDQUFFUCxPQUFPLENBQUNRLFFBQVEsQ0FBQyxDQUMxQixDQUFDLENBQUMsRUFDRixDQUFBNUMsY0FBQSxHQUFBcUIsQ0FBQSxTQUFBckIsY0FBQSxHQUFBbUIsQ0FBQSxNQUNBLE1BQU8sQ0FBQWlCLE9BQU8sQ0FBQ1MsTUFBTSxDQUFDLENBQUVQLElBQUksQ0FBRUEsSUFBSSxDQUFFUSxPQUFPLENBQUUsdUNBQXdDLENBQUMsQ0FBQyxDQUN6RixDQUFDLEtBQUE5QyxjQUFBLEdBQUFxQixDQUFBLFVBQ0gsQ0FBQyxLQUFBckIsY0FBQSxHQUFBcUIsQ0FBQSxVQUNILENBQ0YsQ0FBQyxDQUNILENBQ0YsQ0FBQyJ9